{"version":3,"file":"static/js/355.030da5de.chunk.js","mappings":"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","sources":["webpack://react/./src/common/ContentBlock/ContentBlock.module.css?810a","common/ContentBlock/ContentBlock.tsx","common/FormsControls/FormsControls.tsx","webpack://react/./src/component/pages/profile/MyPosts/Post/Post.module.css?03f6","webpack://react/./src/common/DialogWindow/DialogWindow.module.css?ce94","common/DialogWindow/DialogWindow.tsx","component/pages/profile/MyPosts/Post/Post.tsx","webpack://react/./src/component/pages/profile/MyPosts/AddPostForm/AddPostForm.module.css?b73e","component/pages/profile/MyPosts/AddPostForm/AddPostForm.tsx","component/pages/profile/MyPosts/MyPosts.tsx","component/pages/profile/MyPosts/MyPostsContainer.tsx","webpack://react/./src/component/pages/profile/ProfileInfo/ProfilePhoto/ProfilePhoto.module.css?c8c0","component/pages/profile/ProfileInfo/ProfilePhoto/ProfilePhoto.tsx","webpack://react/./src/component/pages/profile/ProfileInfo/ProfileInfo.module.css?e98f","webpack://react/./src/common/LableBlock/LableBlock.module.css?eca0","common/LableBlock/LableBlock.tsx","webpack://react/./src/component/pages/profile/ProfileInfo/status/ProfileStatusWithHook.module.css?f8cf","component/pages/profile/ProfileInfo/status/ProfileStatusWithHook.tsx","webpack://react/./src/common/Contact/Contact.module.css?27aa","common/Contact/Contact.tsx","webpack://react/./src/component/pages/profile/ProfileInfo/contacts/ProfileContacts.module.css?2863","component/pages/profile/ProfileInfo/contacts/ProfileContactsForm.tsx","component/pages/profile/ProfileInfo/contacts/ProfileContacts.tsx","component/pages/profile/ProfileInfo/ProfileInfo.tsx","component/pages/profile/Profile.tsx","component/pages/profile/ProfileContainer.jsx","utils/validator/validators.ts","../node_modules/use-isomorphic-layout-effect/dist/use-isomorphic-layout-effect.browser.esm.js","../node_modules/use-composed-ref/dist/use-composed-ref.esm.js","../node_modules/react-textarea-autosize/dist/react-textarea-autosize.browser.esm.js","../node_modules/use-latest/dist/use-latest.esm.js","webpack://react/./src/common/FormsControls/FormsControls.module.css?9c32"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"ContentBlock_content__Yh26t\"};","import style from \"./ContentBlock.module.css\"\r\nimport React, { FC } from \"react\"\r\nexport type ContentBlockType = {\r\n    children: Array<JSX.Element> | JSX.Element\r\n    isDarkTheme: boolean\r\n}\r\nlet ContentBlock: FC<ContentBlockType> = ({ children, isDarkTheme }) => {\r\n    let styleFon = isDarkTheme ?\r\n        { backgroundColor: \"#424242\", border: '1px solid rgba(255, 255, 255, 0.08)', color: \"#fff\", } :\r\n        { backgroundColor: \"#fff\", border: '1px solid rgba(0, 0, 0, 0.16)' }\r\n\r\n    return (<div style={styleFon} className={style.content}>\r\n        {children}\r\n    </div>)\r\n}\r\nexport default ContentBlock","import { Field } from \"redux-form\"\r\nimport style from \"./FormsControls.module.css\"\r\nimport React, { FC } from \"react\"\r\nimport { FielddValidatorType } from \"../../utils/validator/validators\"\r\nimport { join } from \"../../utils/function\"\r\ntype FormcontrolTYpe = {\r\n    children: React.ReactNode\r\n    meta: {\r\n        touched: boolean\r\n        error: string\r\n    }\r\n}\r\nconst Formcontrol: FC<FormcontrolTYpe> = (props) => {\r\n    const { meta: { touched, error }, children } = props\r\n    // деструктурезация {input,meta,...props}\r\n    // мы берем отдельно input,meta, а все оставшиеся штуки оставляем в пропсах\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={join([hasError ? style.error : \"\", style.form_Control])}>\r\n            {children}\r\n            {hasError && <span className={style.error_text}>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    return (<Formcontrol {...props} >\r\n        <textarea {...props.input} {...props} />\r\n    </Formcontrol>)\r\n}\r\n\r\nexport const Input = (props: any) => {\r\n    return (<Formcontrol {...props} >\r\n        <input {...props.input} {...props} />\r\n    </Formcontrol>)\r\n}\r\n\r\nexport function createField<KeysType extends string>(placeholder: string, name: KeysType,\r\n    validators: Array<FielddValidatorType>,\r\n    component: string | React.Component | React.FC,\r\n    props = {}, text = \"\"): any {\r\n    return (<div className={style.row}>\r\n        <Field name={name} component={component}\r\n            placeholder={placeholder}\r\n            validate={validators}\r\n            {...props}\r\n        />\r\n        {text}\r\n    </div>)\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"profile_img\":\"Post_profile_img__01G+d\",\"btn_indent\":\"Post_btn_indent__V84F0\",\"textarea_block\":\"Post_textarea_block__KiVeA\",\"black\":\"Post_black__KRUaF\",\"light\":\"Post_light__N5vqL\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal_window\":\"DialogWindow_modal_window__Z0Q5C\",\"modal_window_block\":\"DialogWindow_modal_window_block__TKAuJ\",\"modal_window_text\":\"DialogWindow_modal_window_text__DqR0m\",\"btn_block\":\"DialogWindow_btn_block__90tHY\",\"btn_indent\":\"DialogWindow_btn_indent__9YbhS\"};","import style from \"./DialogWindow.module.css\"\r\nimport styleMain from \"./../../App.module.css\"\r\nimport React, { FC } from \"react\"\r\nimport BaseButton from \"../Button/BaseButton\"\r\nimport { join } from \"../../utils/function\"\r\nimport ModalWindow from \"../ModalWindow/ModalWindow\"\r\nexport type DialogWindowType = {\r\n    text: string\r\n    agreementTextButton?: string\r\n    canselTextButton?: string\r\n    id?: number\r\n    isShow?:boolean\r\n    agreement: (id: number) => void\r\n    cansel: () => void\r\n}\r\nlet DialogWindow: FC<DialogWindowType> = ({ text, agreementTextButton = \"Ok\",isShow,\r\n    canselTextButton = \"Сancel\", id, agreement, cansel }) => {\r\n    return (\r\n        <ModalWindow isShow={isShow}>\r\n            <div className={style.modal_window}>\r\n                <div className={join([style.modal_window_block, styleMain.content])}>\r\n                    <div className={style.modal_window_text}>{text}</div>\r\n                    <div className={style.btn_block}>\r\n                        <BaseButton className={[style.btn_indent]} value={agreementTextButton} onClick={() => agreement(id)} />\r\n                        <BaseButton value={canselTextButton} onClick={cansel} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </ModalWindow>\r\n    )\r\n}\r\nexport default DialogWindow","import style from \"./Post.module.css\"\r\nimport React, { useState } from \"react\"\r\nimport ReactTextareaAutosize from \"react-textarea-autosize\";\r\nimport { PostType } from \"../../../../../redux/profile-reducer\";\r\nimport { checkTextEmpty } from \"../../../../../utils/validator/validators\";\r\nimport BaseButton from \"../../../../../common/Button/BaseButton\";\r\nimport DialogWindow from \"../../../../../common/DialogWindow/DialogWindow\";\r\nimport ContentBlock from \"../../../../../common/ContentBlock/ContentBlock\";\r\nimport { join } from \"../../../../../utils/function\";\r\ntype propsType = {\r\n  post: PostType\r\n  isDarkTheme: boolean\r\n  deletePost: (id: number) => void\r\n  updatePost: (idPost: number, newText: string) => void\r\n}\r\nconst Post = (props: propsType) => {\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [value, setTextPost] = useState(props.post.text)\r\n  let [error, setErrorText] = useState('')\r\n  let [showWindowDelete, setshowWindowDelete] = useState(false)\r\n\r\n  const updateText = () => () => {\r\n    setEditMode(true)\r\n  }\r\n  const save = () => () => {\r\n    if (checkTextEmpty(value) === undefined) {\r\n      props.updatePost(props.post.id, value)\r\n      setEditMode(false)\r\n      setErrorText(\"\")\r\n    }\r\n    else setErrorText(checkTextEmpty(value))\r\n  }\r\n  const cansel = () => () => {\r\n    setTextPost(props.post.text)\r\n    setEditMode(false)\r\n    setErrorText(\"\")\r\n  }\r\n  const deletePost = () => () => {\r\n    setshowWindowDelete(true)\r\n  }\r\n  const agreement = (id: number) => {\r\n    props.deletePost(id)\r\n    setshowWindowDelete(false)\r\n  }\r\n  const canselDalete = () => {\r\n    setshowWindowDelete(false)\r\n  }\r\n  let styleColor = props.isDarkTheme ? style.black : style.light\r\n  return (\r\n    <ContentBlock isDarkTheme={props.isDarkTheme}>\r\n      <div className={join([style.textarea_block, styleColor])}>\r\n        <ReactTextareaAutosize readOnly={!editMode} value={value}\r\n          onChange={ev => setTextPost(ev.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div>{error}</div>\r\n      {!editMode && <>\r\n        <BaseButton isSmall onClick={updateText()} value=\"Edit\" className={[style.btn_indent]} />\r\n        <BaseButton isSmall onClick={deletePost()} value=\"Delete\" />    </>}\r\n      {editMode && <>\r\n        <BaseButton isSmall value=\"Save\" onClick={save()} className={[style.btn_indent]} />\r\n        <BaseButton isSmall isMutedStyle={true} value=\"Cansel\" onClick={cansel()} />    </>}\r\n      {/* {showWindowDelete &&  */}\r\n      <DialogWindow id={props.post.id}\r\n        isShow={showWindowDelete}\r\n        text=\"Are you sure you want to delete the post?\"\r\n        agreement={agreement} cansel={canselDalete} />\r\n\r\n    </ContentBlock>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"AddPostForm_block__nsVAm\",\"black\":\"AddPostForm_black__hwC+t\",\"light\":\"AddPostForm_light__xRitV\",\"photo_user\":\"AddPostForm_photo_user__Cdigg\",\"btn\":\"AddPostForm_btn__xjHqL\"};","import React, { FC, useState, useEffect } from \"react\";\r\nimport style from \"./AddPostForm.module.css\"\r\nimport { ProfileType } from \"../../../../../api/api\";\r\nimport defaultPhoto from \"./../../../../../assets/default_user.png\"\r\n\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { checkTextEmpty } from \"../../../../../utils/validator/validators\";\r\nimport BaseButton from \"../../../../../common/Button/BaseButton\";\r\nimport ContentBlock from \"./../../../../../common/ContentBlock/ContentBlock\"\r\nimport { join } from \"../../../../../utils/function\";\r\n\r\ntype AddPostFormType = {\r\n  profile: ProfileType\r\n  isDarkTheme: boolean\r\n  onSubmit: (value: any) => void\r\n}\r\nexport type AddPostFormFieldType = {\r\n  newPostText: string\r\n}\r\nconst AddPostForm: FC<AddPostFormType> = ({ profile, onSubmit, isDarkTheme }) => {\r\n  const photo = profile?.photos?.large ? profile.photos.large : defaultPhoto\r\n  let [value, setTextPost] = useState('')\r\n  let [error, setErrorText] = useState('')\r\n\r\n  const sentPostText = () => {\r\n    if (checkTextEmpty(value) === undefined) {\r\n      onSubmit(value)\r\n      setTextPost(\"\")\r\n      setErrorText(\"\")\r\n    }\r\n    else setErrorText(checkTextEmpty(value))\r\n\r\n  }\r\n  useEffect(() => {\r\n    if (value.length === 0)\r\n      setTextPost(\"\")\r\n  }, [value])\r\n  let styleColor = isDarkTheme ? style.black : style.light\r\n\r\n  return (\r\n    <ContentBlock isDarkTheme={isDarkTheme}>\r\n      <form className={join([style.block,styleColor]) }>\r\n        <img src={photo} alt=\"photo user\" className={style.photo_user} />\r\n        <TextareaAutosize value={value}\r\n          onChange={e => setTextPost(e.target.value)}\r\n          placeholder=\"Anything new?\"\r\n          className={style.test}\r\n        />\r\n        <div>{error}</div>\r\n        <BaseButton value=\"Add post\" onClick={sentPostText} className={[style.btn]} />\r\n      </form>\r\n    </ContentBlock>\r\n\r\n  )\r\n}\r\n\r\nexport default AddPostForm;\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\"\r\nimport style from \"./MyPosts.module.css\"\r\nimport ReduxAddPostForm, { AddPostFormFieldType } from \"./AddPostForm/AddPostForm\";\r\nimport { PostType } from \"../../../../redux/profile-reducer\";\r\nimport { ProfileType } from \"../../../../api/api\";\r\ntype MapStateToPropsType = {\r\n  newPostText: string\r\n  posts: Array<PostType>\r\n  profile: ProfileType\r\n  isDarkTheme:boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n  addPost: (newPostText: string) => void\r\n  deletePost: (id: number) => void\r\n  updatePost: (idPost: number, newText: string) => void\r\n}\r\ntype propsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nconst MyPosts = (props: propsType) => {\r\n\r\n  let postsElements = props.posts.map((el: PostType, index: number) =>\r\n    <Post key={el.id} isDarkTheme={props.isDarkTheme} post={el} deletePost={props.deletePost} updatePost={props.updatePost} />)\r\n\r\n  const onSubmit = (value: string) => {\r\n    props.addPost(value)\r\n  }\r\n\r\n  return (< >\r\n    <ReduxAddPostForm isDarkTheme={props.isDarkTheme} onSubmit={onSubmit} profile={props.profile} />\r\n    <p>My posts:</p>\r\n    {postsElements}\r\n  </>);\r\n}\r\n\r\nexport default MyPosts;\r\n","import { addPost, PostType ,deletePost,updatePost} from \"../../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\"\r\nimport { AppReducerType } from \"../../../../redux/redux-store\";\r\nimport { ProfileType } from \"../../../../api/api\";\r\n\r\ntype MapStateToPropsType = {\r\n  newPostText: string\r\n  posts: Array<PostType>\r\n  profile: ProfileType\r\n  isDarkTheme:boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n  addPost: (newPostText: string) => void\r\n  deletePost:(postId:number)=>void\r\n  updatePost: (idPost: number, newText: string) => void\r\n}\r\nlet mapStateToProps = (state: AppReducerType): MapStateToPropsType => {\r\n  return {\r\n    newPostText: state.profilePage.newPostText,\r\n    posts: state.profilePage.posts,\r\n    profile: state.profilePage.profile,\r\n    isDarkTheme:state.app.isDarkTheme\r\n  }\r\n}\r\nexport default connect<MapStateToPropsType, MapDispatchToPropsType>(mapStateToProps, { addPost ,deletePost,updatePost})(MyPosts)\r\n","// extracted by mini-css-extract-plugin\nexport default {\"photo_block\":\"ProfilePhoto_photo_block__8+08z\",\"photo\":\"ProfilePhoto_photo__vOQuo\",\"islookingForAJob\":\"ProfilePhoto_islookingForAJob__qcQxs\",\"input_new_photo\":\"ProfilePhoto_input_new_photo__J9ZNy\"};","import style from \"./ProfilePhoto.module.css\"\r\nimport photo from \"./../../../../../assets/avatar.png\"\r\nimport React, { FC } from \"react\"\r\nimport LoadPhoto from \"./../../../../../assets/load-photo.png\"\r\n\r\ntype propsType = {\r\n    photo: string\r\n    lookingForAJob: boolean\r\n    isAutorizedUserId: boolean\r\n    setProfilePhoto: (photo: FormData) => void\r\n}\r\nconst ProfilePhoto: FC<propsType> = (props: propsType) => {\r\n    let userPhoto = props.photo ? props.photo : photo\r\n    const test = (e: any) => {\r\n        // условие что это активный пользователь\r\n        let formData = new FormData()\r\n        let file = e.target.files[0]\r\n        formData.append(\"image\", file, file.name)\r\n        props.setProfilePhoto(formData)\r\n    }\r\n    return (<>\r\n        <div className={style.photo_block} >\r\n            <img src={userPhoto} alt=\"profile_photo\" className={style.photo} />\r\n            {props.isAutorizedUserId ?\r\n                <label className={style.input_new_photo} title=\"Change a photo\">\r\n                    <img src={LoadPhoto} alt=\"Load Photo\" />\r\n                    <input type=\"file\" onChange={test} />\r\n                </label>\r\n                : ''}\r\n            {props.lookingForAJob ? <div className={style.islookingForAJob}>Open to work</div> : null}\r\n        </div>\r\n    </>\r\n\r\n    )\r\n}\r\nexport default ProfilePhoto","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"ProfileInfo_content__Vyjzt\",\"info\":\"ProfileInfo_info__p3NvM\"};","// extracted by mini-css-extract-plugin\nexport default {\"label_block\":\"LableBlock_label_block__UUsGD\",\"label\":\"LableBlock_label__UwD4K\",\"label_bold\":\"LableBlock_label_bold__w5xRa\"};","import style from \"./LableBlock.module.css\"\r\nimport React, { FC, useEffect } from \"react\"\r\nexport type LableBlockType = {\r\n    children: JSX.Element | string\r\n    name: string\r\n    isBold?: boolean\r\n    margin?: number\r\n}\r\nlet LableBlock: FC<LableBlockType> = ({ children, name, margin = 0, isBold = false }) => {\r\n    let styleBlock = {\r\n        margin: margin + \"px 0px\"\r\n    }\r\n    return (<div className={style.label_block} style={styleBlock}>\r\n        <label className={isBold ? style.label_bold : style.label}>{name}</label>\r\n        <div className={style.block}>\r\n            {children}\r\n        </div>\r\n    </div>)\r\n}\r\nexport default LableBlock","// extracted by mini-css-extract-plugin\nexport default {\"set_status\":\"ProfileStatusWithHook_set_status__0e6uY\"};","import React, { FC, useEffect, useState } from \"react\";\r\nimport LableBlock from \"../../../../../common/LableBlock/LableBlock\";\r\nimport style from \"./ProfileStatusWithHook.module.css\"\r\n\r\ntype propstype = {\r\n  status: string\r\n  isAuth: boolean\r\n  isAutorizedUserId: boolean\r\n  updateStatus: (status: string) => void\r\n}\r\nconst ProfileStatusWithHook: FC<propstype> = (props) => {\r\n  let [editMode, setEditMode] = useState(false)\r\n  let [status, setStatus] = useState(props.status)\r\n  useEffect(() => {\r\n    // выполняется после отрисовки\r\n    setStatus(props.status)\r\n  }, [props.status])\r\n  const activateEditMode = () => {\r\n    if (props.isAuth && props.isAutorizedUserId)\r\n      setEditMode(true)\r\n  }\r\n  const deActivateEditMode = () => {\r\n    setEditMode(false)\r\n\r\n    props.updateStatus(status)\r\n  }\r\n  const changeStatus = (e: any) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n  let getStatus = (status: string) => {\r\n    if (status) return status\r\n    else if (!status && !props.isAutorizedUserId) return \"The user has not entered a status\"\r\n    else return \"Enter status\"\r\n  }\r\n  return (<div>\r\n    <LableBlock name=\"Status:\" isBold margin={6}>\r\n      {editMode ?\r\n        <input autoFocus={true} onChange={changeStatus}\r\n          value={status}\r\n          onBlur={deActivateEditMode} type=\"text\" />\r\n        :\r\n        <div title={props.isAutorizedUserId ? \"Double click\" : null} className={props.isAutorizedUserId ? style.set_status : ''}\r\n          onDoubleClick={activateEditMode}>{getStatus(status)}\r\n        </div>\r\n      }\r\n    </LableBlock>\r\n  </div>)\r\n}\r\n\r\nexport default ProfileStatusWithHook\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"Contact_contact__PgbTh\",\"link\":\"Contact_link__YgoAo\"};","import style from \"./Contact.module.css\"\r\nimport React, { FC } from \"react\"\r\nexport type ContactType = {\r\n    link: string\r\n    linkName: string\r\n}\r\nlet Contact: FC<ContactType> = ({ link, linkName }) => {\r\n    return (<>\r\n        {link ?\r\n            <div className={style.contact}>\r\n                <a href={link}\r\n                    rel=\"noreferrer\" target=\"_blank\"\r\n                    title={link} className={style.link}>\r\n                    {linkName}</a>\r\n            </div>\r\n            : null}\r\n    </>)\r\n}\r\nexport default Contact","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"ProfileContacts_name__IyaaZ\",\"contact_block\":\"ProfileContacts_contact_block__x9xAQ\",\"contacts\":\"ProfileContacts_contacts__2+B8A\",\"set_status\":\"ProfileContacts_set_status__NQvKB\",\"lookingForAJobDescription\":\"ProfileContacts_lookingForAJobDescription__ugWgK\"};","import { reduxForm } from \"redux-form\"\r\nimport React, { FC, FormEvent } from \"react\"\r\nimport { createField, Input, Textarea } from \"../../../../../common/FormsControls/FormsControls\"\r\nimport { maxLenghtCreator, required } from \"../../../../../utils/validator/validators\"\r\nimport BaseButton from \"../../../../../common/Button/BaseButton\"\r\nimport styleFormsControl from \"./../../../../../common/FormsControls/FormsControls.module.css\"\r\nimport LableBlock from \"../../../../../common/LableBlock/LableBlock\"\r\nimport { ProfileType } from \"../../../../../api/api\"\r\nconst maxLenght100 = maxLenghtCreator(100)\r\ntype LoginFormPropsType = {\r\n  handleSubmit?: () => void\r\n  _error?: any\r\n\r\n}\r\ntype ErrorType = {\r\n  _error: any\r\n}\r\nconst ProfileContactsForm: FC<LoginFormPropsType> = ({ handleSubmit, _error }) => {\r\n  // console.log(\"error\", _error)\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <LableBlock name=\"About Me\">\r\n        {createField(\"About Me\", 'aboutMe', [required, maxLenght100], Input)}\r\n      </LableBlock>\r\n      <LableBlock name=\"FullName\">\r\n        {createField(\"FullName\", 'fullName', [required, maxLenght100], Input)}\r\n      </LableBlock>\r\n      {createField(null, 'lookingForAJob', [],\r\n        'input', { type: \"checkbox\" }, \"lookingForAJob\")}\r\n      {createField(\"LookingForAJobDescription\", 'lookingForAJobDescription', [maxLenght100], Textarea)}\r\n\r\n      <LableBlock name=\"Facebook\">\r\n        {createField(\"facebook\", 'contacts.facebook', [maxLenght100], Input)}\r\n      </LableBlock>\r\n      <LableBlock name=\"Github\">\r\n        {createField(\"github\", 'contacts.github', [maxLenght100], Input)}\r\n      </LableBlock>\r\n\r\n      <LableBlock name=\"VK\">\r\n        {createField(\"VK\", 'contacts.vk', [maxLenght100], Input)}\r\n      </LableBlock>\r\n\r\n      <LableBlock name=\"Instagram\">\r\n        {createField(\"Instagram\", 'contacts.instagram', [maxLenght100], Input)}\r\n      </LableBlock>\r\n\r\n      <LableBlock name=\"Twitter\">\r\n        {createField(\"Twitter\", 'contacts.twitter', [maxLenght100], Input)}\r\n      </LableBlock>\r\n\r\n      <LableBlock name=\"Website\">\r\n        {createField(\"Website\", 'contacts.website', [maxLenght100], Input)}\r\n      </LableBlock>\r\n\r\n      <LableBlock name=\"MainLink\">\r\n        {createField(\"MainLink\", 'contacts.mainLink', [maxLenght100], Input)}\r\n      </LableBlock>\r\n\r\n      <LableBlock name=\"Youtube\">\r\n        {createField(\"Youtube\", 'contacts.youtube', [maxLenght100], Input)}\r\n      </LableBlock>\r\n      {/* {createField(\"Skype\", 'contacts.skype', [maxLenght100], Input)} */}\r\n      {/* {createField(\"Icq\", 'contacts.icq', [maxLenght100], Input)} */}\r\n      {/* {createField(\"Email\", 'contacts.email', [maxLenght100], Input)} */}\r\n      {/* {createField(\"GooglePlus\", 'contacts.googlePlus', [maxLenght100], Input)} */}\r\n      {/* {createField(\"WhatsApp\", 'contacts.whatsApp', [maxLenght100], Input)} */}\r\n      {_error && <div className={styleFormsControl.formSummaryError}>\r\n        {_error}\r\n      </div>}\r\n      <BaseButton onClick={() => { }} value=\"Save\" />\r\n      {/* <button>Save</button> */}\r\n    </form>\r\n  )\r\n}\r\n\r\nconst ReduxProfileContactsForm = reduxForm<ProfileType, LoginFormPropsType, ErrorType>({\r\n  form: 'contact',\r\n})(ProfileContactsForm)\r\n\r\nexport default ReduxProfileContactsForm","import Contact, { ContactType } from \"../../../../../common/Contact/Contact\";\r\nimport Preloader from \"../../../../../common/Preloader/Preloader\";\r\nimport style from \"./ProfileContacts.module.css\"\r\nimport React, { FC, useState } from \"react\"\r\nimport { ProfileContactsType, ProfileType } from \"../../../../../api/api\";\r\nimport ReduxProfileContactsForm, { } from \"./ProfileContactsForm\";\r\nimport BaseButton from \"../../../../../common/Button/BaseButton\";\r\nimport LableBlock from \"../../../../../common/LableBlock/LableBlock\";\r\ntype propsType = {\r\n  profile: ProfileType\r\n  isAuth: boolean\r\n  isAutorizedUserId: boolean\r\n  setProfileDetail: (aboutMe: ProfileType) => void\r\n}\r\nconst ProfileContacts: FC<propsType> = ({ profile, isAuth, isAutorizedUserId, setProfileDetail }) => {\r\n  let [editMode, setEditMode] = useState(false)\r\n\r\n\r\n  if (!profile) {\r\n    return <Preloader isFetching={!profile} />\r\n  }\r\n\r\n  const contacts: ProfileContactsType = profile.contacts\r\n  let contactArray: Array<ContactType> = [\r\n    { link: contacts.github, linkName: 'Github' },\r\n    { link: contacts.vk, linkName: 'VK' },\r\n    { link: contacts.facebook, linkName: 'Facebook' },\r\n    { link: contacts.instagram, linkName: 'Instagram' },\r\n    { link: contacts.twitter, linkName: 'Twitter' },\r\n    { link: contacts.website, linkName: 'Website' },\r\n    { link: contacts.mainLink, linkName: 'MainLink' },\r\n    { link: contacts.youtube, linkName: 'Youtube' },\r\n    // { link: contacts.skype, linkName: 'Skype' },\r\n    // { link: contacts.icq, linkName: 'Icq' },\r\n    // { link: contacts.googlePlus, linkName: 'GooglePlus' },\r\n    // { link: contacts.whatsApp, linkName: 'WhatsApp' },\r\n    // { link: contacts.email, linkName: 'Email' },\r\n  ]\r\n\r\n  const onSubmit = (data: ProfileType) => {\r\n    setProfileDetail(data)\r\n    setEditMode(false)\r\n  }\r\n  const editData = () => () => {\r\n    setEditMode(true)\r\n  }\r\n  const contactElement = contactArray.map((el, index) => <Contact key={el.linkName} link={el.link} linkName={el.linkName} />)\r\n  let isNotEmptyContact = contactArray.some((el) => el.link != null)\r\n  return (\r\n    <>\r\n      {editMode ? <ReduxProfileContactsForm initialValues={profile} onSubmit={onSubmit} /> :\r\n        <div>\r\n          <h1 className={style.name}> {profile.fullName} </h1>\r\n          <LableBlock name=\"About Me:\" isBold margin={6} >\r\n            {profile?.aboutMe != null ? profile.aboutMe : \"No information \"}\r\n          </LableBlock>\r\n          <LableBlock name=\"Contacts:\" isBold margin={6} >\r\n            <>{isNotEmptyContact ? contactElement : <span>Contacts are empty</span>}   </>\r\n          </LableBlock>\r\n          {profile.lookingForAJob ? (\r\n            <LableBlock name=\"Description:\" isBold margin={6}>\r\n              {profile.lookingForAJobDescription}\r\n            </LableBlock>\r\n          ) : null}\r\n        </div>\r\n      }\r\n      {isAutorizedUserId && !editMode ?\r\n        <BaseButton value=\"Edit information\" onClick={editData()} />\r\n        : ''}\r\n    </>);\r\n}\r\n\r\nexport default ProfileContacts;\r\n","import Preloader from \"../../../../common/Preloader/Preloader\";\r\nimport ProfilePhoto from \"./ProfilePhoto/ProfilePhoto\";\r\nimport style from \"./ProfileInfo.module.css\"\r\nimport ProfileStatusWithHook from \"./status/ProfileStatusWithHook\";\r\nimport React, { FC } from \"react\"\r\nimport { ProfileType } from \"../../../../api/api\";\r\nimport ProfileContacts from \"./contacts/ProfileContacts\";\r\nimport ContentBlock from \"../../../../common/ContentBlock/ContentBlock\";\r\ntype propsType = {\r\n  profile: ProfileType\r\n  status: string\r\n  isAuth: boolean\r\n  isAutorizedUserId: boolean\r\n  isDarkTheme: boolean\r\n  updateStatus: (status: string) => void\r\n  setProfilePhoto: (photo: FormData) => void\r\n  setProfileDetail: (aboutMe: ProfileType) => void\r\n}\r\nconst ProfileInfo: FC<propsType> = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader isFetching={!props.profile} />\r\n  }\r\n  return (\r\n    <ContentBlock isDarkTheme={props.isDarkTheme} >\r\n      <div className={style.content}>\r\n        <ProfilePhoto photo={props.profile.photos.large}\r\n          setProfilePhoto={props.setProfilePhoto}\r\n          lookingForAJob={props.profile.lookingForAJob}\r\n          isAutorizedUserId={props.isAutorizedUserId} />\r\n        <div className={style.info}>\r\n\r\n          <ProfileContacts\r\n            profile={props.profile}\r\n            isAuth={props.isAuth}\r\n            setProfileDetail={props.setProfileDetail}\r\n            isAutorizedUserId={props.isAutorizedUserId}\r\n          />\r\n          <ProfileStatusWithHook status={props.status}\r\n            isAuth={props.isAuth}\r\n            isAutorizedUserId={props.isAutorizedUserId}\r\n            updateStatus={props.updateStatus} />\r\n        </div>\r\n      </div>\r\n    </ContentBlock>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport React from \"react\"\r\nimport { ProfileType } from \"../../../api/api\";\r\ntype propsType = {\r\n  profile: ProfileType\r\n  status: string\r\n  autorizedUserId: number\r\n  profileId: number\r\n  isAuth: boolean\r\n  isDarkTheme:boolean\r\n  updateStatus: (status: string) => void\r\n  setProfilePhoto: (photo: FormData) => void\r\n  setProfileDetail: (aboutMe: ProfileType) => void\r\n}\r\nconst Profile = (props: propsType) => {\r\n  const isAutorizedUserId = props.autorizedUserId === props.profile?.userId\r\n  // const array = [1, 25, 55, 77, -5, 108]\r\n  // console.log(\"sort array\", array.sort((a, b) => {\r\n  //   if (a > b) return 1\r\n  //   else return -1\r\n  // }))\r\n\r\n  // let myMapFunction = (array: Array<any>, callBack: Function) => {\r\n  //   const result = []\r\n  //   for (let i = 0; i < array.length; i++) {\r\n  //     const element = array[i];\r\n  //     result.push(callBack(element))\r\n  //   }\r\n  //   return result\r\n  // }\r\n  // console.log(\"myMapFunction\",myMapFunction(array,(a:number)=>{return a+1}))\r\n  // полиндром\r\n  // const test = \"ava\"\r\n  // const test1 = \"awra\"\r\n  // const Polindrom = (str: string) => {\r\n  //   let string = str.toLowerCase()\r\n  //   return string === string.split(\"\").reverse().join(\"\")\r\n  // }\r\n  // console.log(Polindrom(test))\r\n  // console.log(Polindrom(test1))\r\n\r\n  return (<>\r\n    <ProfileInfo profile={props.profile}\r\n      status={props.status}\r\n      updateStatus={props.updateStatus}\r\n      isAuth={props.isAuth}\r\n      setProfilePhoto={props.setProfilePhoto}\r\n      setProfileDetail={props.setProfileDetail}\r\n      isAutorizedUserId={isAutorizedUserId}\r\n      isDarkTheme={props.isDarkTheme}\r\n    />\r\n    {isAutorizedUserId &&\r\n      <MyPostsContainer />\r\n    }\r\n\r\n  </>);\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setProfile, getStatus, updateStatus, setProfilePhoto ,setProfileDetail} from \"../../../redux/profile-reducer\"\r\nimport Profile from \"./Profile\";\r\nimport { compose } from \"redux\";\r\nimport { withRouter } from \"../../../hoc/withRouter\"\r\nimport { Navigate } from \"react-router-dom\";\r\n// type MapStateToPropsType = {\r\n//   profile: ProfileType\r\n//   status: string\r\n//   autorizedUserId: number\r\n//   isAuth: boolean\r\n// }\r\n// type MapDispatchToPropsType = {\r\n//   setProfile: (id: number) => void\r\n//   getStatus: (id: number) => void\r\n//   updateStatus: (status: string) => void\r\n// }\r\n// type propsType = MapStateToPropsType & MapDispatchToPropsType\r\nclass ProfileContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.profileId = this.props.router.params.profileId ? this.props.router.params.profileId : this.props.autorizedUserId\r\n  }\r\n  refreshProfile() {\r\n    let profileId = this.props.router.params.profileId ? this.props.router.params.profileId : this.props.autorizedUserId\r\n    // if (!profileId) {\r\n    // profileId = 26414\r\n    // this.props.navigation(\"/login\", {})\r\n\r\n\r\n    // console.log(\"router\",this.props.router)\r\n    // navigation нужно использовать в useEffect\r\n    // не сработает, потому что редиректы не тут нужно сделать\r\n    // this.props.router.navigate(\"/login\"); \r\n    // не сработает потому что history - undefined \r\n    // this.props.history.push('/login')\r\n    // }\r\n    if (profileId) {\r\n      this.props.setProfile(profileId)\r\n      this.props.getStatus(profileId)\r\n    }\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.router.params.profileId !== prevProps.router.params.profileId)\r\n      this.refreshProfile()\r\n  }\r\n  render() {\r\n    if (!this.profileId) return <Navigate to=\"/login\" />;\r\n    return (<Profile {...this.props} />)\r\n  }\r\n}\r\n// AppReducerType\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    isDarkTheme:state.app.isDarkTheme\r\n  }\r\n}\r\n\r\n// function withRouter(Component) {\r\n//   function ComponentWithRouterProp(props) {\r\n//     let location = useLocation();\r\n//     let navigate = useNavigate();\r\n//     let params = useParams();\r\n//     return (\r\n//       <Component\r\n//         {...props}\r\n//         router={{ location, navigate, params }}\r\n//       />\r\n//     );\r\n//   }\r\n//   return ComponentWithRouterProp;\r\n// }\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { setProfile, getStatus, updateStatus, setProfilePhoto ,setProfileDetail}),\r\n\r\n  // withAuthRedirect\r\n)(ProfileContainer)","export type FielddValidatorType = (value: string) => string | undefined | boolean\r\n\r\nexport const required: FielddValidatorType = (value) => {\r\n    if (value) return undefined\r\n    return \"Field is Required \"\r\n}\r\n\r\nexport const maxLenghtCreator = (maxLenght: number): FielddValidatorType => (value) => {\r\n    if (value && value.length > maxLenght) return `Max lenght is ${maxLenght} symbols`\r\n    return undefined\r\n}\r\n\r\nexport const checkTextEmpty = (value: string): string  => {\r\n    const textWithoutLetters = value.replace(/[\\n\\r]/g, '')\r\n    if (textWithoutLetters.length === 0 && value.length > 0)\r\n        return \"Don't post empty space\"\r\n    if (textWithoutLetters.length === 0 && value.length === 0)\r\n        return \"Don't post empty post\"\r\n    return undefined\r\n}","import { useLayoutEffect } from 'react';\n\nvar index =  useLayoutEffect ;\n\nexport default index;\n","import { useRef, useCallback } from 'react';\n\nvar updateRef = function updateRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n    return;\n  }\n  ref.current = value;\n};\n\nvar useComposedRef = function useComposedRef(libRef, userRef) {\n  var prevUserRef = useRef();\n  return useCallback(function (instance) {\n    libRef.current = instance;\n\n    if (prevUserRef.current) {\n      updateRef(prevUserRef.current, null);\n    }\n\n    prevUserRef.current = userRef;\n\n    if (!userRef) {\n      return;\n    }\n\n    updateRef(userRef, instance);\n  }, [userRef]);\n};\n\nexport default useComposedRef;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { useLayoutEffect, forwardRef, useRef, createElement } from 'react';\nimport useLatest from 'use-latest';\nimport useComposedRef from 'use-composed-ref';\n\nvar HIDDEN_TEXTAREA_STYLE = {\n  'min-height': '0',\n  'max-height': 'none',\n  height: '0',\n  visibility: 'hidden',\n  overflow: 'hidden',\n  position: 'absolute',\n  'z-index': '-1000',\n  top: '0',\n  right: '0'\n};\n\nvar forceHiddenStyles = function forceHiddenStyles(node) {\n  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function (key) {\n    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], 'important');\n  });\n};\n\n//   export type CalculatedNodeHeights = [height: number, rowHeight: number];\n// https://github.com/microsoft/TypeScript/issues/28259\n\nvar hiddenTextarea = null;\n\nvar getHeight = function getHeight(node, sizingData) {\n  var height = node.scrollHeight;\n\n  if (sizingData.sizingStyle.boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    return height + sizingData.borderSize;\n  } // remove padding, since height = content\n\n\n  return height - sizingData.paddingSize;\n};\n\nfunction calculateNodeHeight(sizingData, value, minRows, maxRows) {\n  if (minRows === void 0) {\n    minRows = 1;\n  }\n\n  if (maxRows === void 0) {\n    maxRows = Infinity;\n  }\n\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    hiddenTextarea.setAttribute('tabindex', '-1');\n    hiddenTextarea.setAttribute('aria-hidden', 'true');\n    forceHiddenStyles(hiddenTextarea);\n  }\n\n  if (hiddenTextarea.parentNode === null) {\n    document.body.appendChild(hiddenTextarea);\n  }\n\n  var paddingSize = sizingData.paddingSize,\n      borderSize = sizingData.borderSize,\n      sizingStyle = sizingData.sizingStyle;\n  var boxSizing = sizingStyle.boxSizing;\n  Object.keys(sizingStyle).forEach(function (_key) {\n    var key = _key;\n    hiddenTextarea.style[key] = sizingStyle[key];\n  });\n  forceHiddenStyles(hiddenTextarea);\n  hiddenTextarea.value = value;\n  var height = getHeight(hiddenTextarea, sizingData); // measure height of a textarea with a single row\n\n  hiddenTextarea.value = 'x';\n  var rowHeight = hiddenTextarea.scrollHeight - paddingSize;\n  var minHeight = rowHeight * minRows;\n\n  if (boxSizing === 'border-box') {\n    minHeight = minHeight + paddingSize + borderSize;\n  }\n\n  height = Math.max(minHeight, height);\n  var maxHeight = rowHeight * maxRows;\n\n  if (boxSizing === 'border-box') {\n    maxHeight = maxHeight + paddingSize + borderSize;\n  }\n\n  height = Math.min(maxHeight, height);\n  return [height, rowHeight];\n}\n\nvar noop = function noop() {};\nvar pick = function pick(props, obj) {\n  return props.reduce(function (acc, prop) {\n    acc[prop] = obj[prop];\n    return acc;\n  }, {});\n};\n\nvar SIZING_STYLE = ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'boxSizing', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight', 'letterSpacing', 'lineHeight', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop', // non-standard\n'tabSize', 'textIndent', // non-standard\n'textRendering', 'textTransform', 'width', 'wordBreak'];\nvar isIE = !!document.documentElement.currentStyle ;\n\nvar getSizingData = function getSizingData(node) {\n  var style = window.getComputedStyle(node);\n\n  if (style === null) {\n    return null;\n  }\n\n  var sizingStyle = pick(SIZING_STYLE, style);\n  var boxSizing = sizingStyle.boxSizing; // probably node is detached from DOM, can't read computed dimensions\n\n  if (boxSizing === '') {\n    return null;\n  } // IE (Edge has already correct behaviour) returns content width as computed width\n  // so we need to add manually padding and border widths\n\n\n  if (isIE && boxSizing === 'border-box') {\n    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(sizingStyle.borderRightWidth) + parseFloat(sizingStyle.borderLeftWidth) + parseFloat(sizingStyle.paddingRight) + parseFloat(sizingStyle.paddingLeft) + 'px';\n  }\n\n  var paddingSize = parseFloat(sizingStyle.paddingBottom) + parseFloat(sizingStyle.paddingTop);\n  var borderSize = parseFloat(sizingStyle.borderBottomWidth) + parseFloat(sizingStyle.borderTopWidth);\n  return {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize\n  };\n};\n\nvar useWindowResizeListener = function useWindowResizeListener(listener) {\n  var latestListener = useLatest(listener);\n  useLayoutEffect(function () {\n    var handler = function handler(event) {\n      latestListener.current(event);\n    };\n\n    window.addEventListener('resize', handler);\n    return function () {\n      window.removeEventListener('resize', handler);\n    };\n  }, []);\n};\n\nvar TextareaAutosize = function TextareaAutosize(_ref, userRef) {\n  var cacheMeasurements = _ref.cacheMeasurements,\n      maxRows = _ref.maxRows,\n      minRows = _ref.minRows,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,\n      _ref$onHeightChange = _ref.onHeightChange,\n      onHeightChange = _ref$onHeightChange === void 0 ? noop : _ref$onHeightChange,\n      props = _objectWithoutPropertiesLoose(_ref, [\"cacheMeasurements\", \"maxRows\", \"minRows\", \"onChange\", \"onHeightChange\"]);\n\n  if (process.env.NODE_ENV !== 'production' && props.style) {\n    if ('maxHeight' in props.style) {\n      throw new Error('Using `style.maxHeight` for <TextareaAutosize/> is not supported. Please use `maxRows`.');\n    }\n\n    if ('minHeight' in props.style) {\n      throw new Error('Using `style.minHeight` for <TextareaAutosize/> is not supported. Please use `minRows`.');\n    }\n  }\n\n  var isControlled = props.value !== undefined;\n  var libRef = useRef(null);\n  var ref = useComposedRef(libRef, userRef);\n  var heightRef = useRef(0);\n  var measurementsCacheRef = useRef();\n\n  var resizeTextarea = function resizeTextarea() {\n    var node = libRef.current;\n    var nodeSizingData = cacheMeasurements && measurementsCacheRef.current ? measurementsCacheRef.current : getSizingData(node);\n\n    if (!nodeSizingData) {\n      return;\n    }\n\n    measurementsCacheRef.current = nodeSizingData;\n\n    var _calculateNodeHeight = calculateNodeHeight(nodeSizingData, node.value || node.placeholder || 'x', minRows, maxRows),\n        height = _calculateNodeHeight[0],\n        rowHeight = _calculateNodeHeight[1];\n\n    if (heightRef.current !== height) {\n      heightRef.current = height;\n      node.style.setProperty('height', height + \"px\", 'important');\n      onHeightChange(height, {\n        rowHeight: rowHeight\n      });\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    if (!isControlled) {\n      resizeTextarea();\n    }\n\n    onChange(event);\n  };\n\n  {\n    useLayoutEffect(resizeTextarea);\n    useWindowResizeListener(resizeTextarea);\n  }\n\n  return /*#__PURE__*/createElement(\"textarea\", _extends({}, props, {\n    onChange: handleChange,\n    ref: ref\n  }));\n};\n\nvar index = /* #__PURE__ */forwardRef(TextareaAutosize);\n\nexport default index;\n","import * as React from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\n\nvar useLatest = function useLatest(value) {\n  var ref = React.useRef(value);\n  useIsomorphicLayoutEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n};\n\nexport { useLatest as default };\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"FormsControls_error__H-NWe\",\"error_text\":\"FormsControls_error_text__y-h0q\",\"formSummaryError\":\"FormsControls_formSummaryError__ejpt0\",\"row\":\"FormsControls_row__ijpOL\",\"form_Control\":\"FormsControls_form_Control__Xa4ZO\"};"],"names":["children","styleFon","isDarkTheme","backgroundColor","border","color","style","className","Formcontrol","props","meta","touched","error","hasError","join","Textarea","input","Input","createField","placeholder","name","validators","component","text","validate","agreementTextButton","isShow","canselTextButton","id","agreement","cansel","ModalWindow","styleMain","BaseButton","value","onClick","useState","editMode","setEditMode","post","setTextPost","setErrorText","showWindowDelete","setshowWindowDelete","styleColor","ContentBlock","readOnly","onChange","ev","target","isSmall","undefined","checkTextEmpty","updatePost","isMutedStyle","deletePost","profile","onSubmit","photo","photos","large","defaultPhoto","useEffect","length","src","alt","e","postsElements","posts","map","el","index","addPost","connect","state","newPostText","profilePage","app","MyPosts","userPhoto","isAutorizedUserId","title","type","formData","FormData","file","files","append","setProfilePhoto","lookingForAJob","margin","isBold","styleBlock","status","setStatus","autoFocus","currentTarget","onBlur","updateStatus","onDoubleClick","isAuth","getStatus","link","linkName","href","rel","maxLenght100","maxLenghtCreator","reduxForm","form","handleSubmit","_error","required","styleFormsControl","setProfileDetail","Preloader","isFetching","contacts","contactArray","github","vk","facebook","instagram","twitter","website","mainLink","youtube","contactElement","isNotEmptyContact","some","initialValues","data","fullName","aboutMe","lookingForAJobDescription","autorizedUserId","userId","MyPostsContainer","ProfileContainer","profileId","router","params","this","setProfile","refreshProfile","prevProps","to","React","compose","withRouter","auth","maxLenght","textWithoutLetters","replace","useLayoutEffect","updateRef","ref","current","libRef","userRef","prevUserRef","useRef","useCallback","instance","HIDDEN_TEXTAREA_STYLE","height","visibility","overflow","position","top","right","forceHiddenStyles","node","Object","keys","forEach","key","setProperty","hiddenTextarea","noop","SIZING_STYLE","isIE","document","documentElement","currentStyle","useWindowResizeListener","listener","latestListener","useIsomorphicLayoutEffect","useLatest","handler","event","window","addEventListener","removeEventListener","TextareaAutosize","_ref","cacheMeasurements","maxRows","minRows","_ref$onChange","_ref$onHeightChange","onHeightChange","_objectWithoutPropertiesLoose","isControlled","useComposedRef","heightRef","measurementsCacheRef","resizeTextarea","nodeSizingData","getComputedStyle","obj","sizingStyle","reduce","acc","prop","boxSizing","width","parseFloat","borderRightWidth","borderLeftWidth","paddingRight","paddingLeft","paddingSize","paddingBottom","paddingTop","borderSize","borderBottomWidth","borderTopWidth","getSizingData","_calculateNodeHeight","sizingData","Infinity","createElement","setAttribute","parentNode","body","appendChild","_key","scrollHeight","getHeight","rowHeight","minHeight","Math","max","maxHeight","min","calculateNodeHeight","_extends","forwardRef"],"sourceRoot":""}